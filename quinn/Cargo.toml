[package]
name = "quinn"
version = "0.11.2"
license = "MIT OR Apache-2.0"
repository = "https://github.com/quinn-rs/quinn"
description = "Versatile QUIC transport protocol implementation"
readme = "../README.md"
keywords = ["quic"]
categories = [ "network-programming", "asynchronous" ]
workspace = ".."
edition = "2021"
rust-version = "1.67"

[package.metadata.docs.rs]
all-features = true

[features]
default = ["log", "platform-verifier", "ring", "runtime-tokio", "rustls"]
# Records how long locks are held, and warns if they are held >= 1ms
lock_tracking = []
# Provides `ClientConfig::with_platform_verifier()` convenience method
platform-verifier = ["proto/platform-verifier"]
rustls = ["dep:rustls", "proto/rustls", "proto/ring"]
# Enables `Endpoint::client` and `Endpoint::server` conveniences
ring = ["proto/ring"]
runtime-tokio = ["tokio/time", "tokio/rt", "tokio/net"]
runtime-async-std = ["async-io", "async-std"]
runtime-smol = ["async-io", "smol"]

# Write logs via the `log` crate when no `tracing` subscriber exists
log = ["tracing/log", "proto/log", "udp/log"]

[dependencies]
async-io = { version = "2.0", optional = true }
async-std = { version = "1.11", optional = true }
bytes = "1"
# Enables futures::io::{AsyncRead, AsyncWrite} support for streams
futures-io = { version = "0.3.19", optional = true }
rustc-hash = "2"
pin-project-lite = "0.2"
proto = { package = "quinn-proto", path = "../quinn-proto", version = "0.11.2", default-features = false }
rustls = { version = "0.23", default-features = false, features = ["ring", "std"], optional = true }
smol = { version = "2", optional = true }
socket2 = { workspace = true }
thiserror = "1.0.21"
tracing =  { workspace = true }
tokio = { version = "1.28.1", features = ["sync"] }
udp = { package = "quinn-udp", path = "../quinn-udp", version = "0.5", default-features = false }

[dev-dependencies]
anyhow = "1.0.22"
crc = "3"
bencher = "0.1.5"
directories-next = "2"
rand = "0.8"
rcgen = "0.13"
rustls-pemfile = "2"
clap = { version = "4", features = ["derive"] }
tokio = { version = "1.28.1", features = ["rt", "rt-multi-thread", "time", "macros", "sync"] }
tracing-subscriber = { workspace = true }
tracing-futures = { version = "0.2.0", default-features = false, features = ["std-future"] }
url = "2"

[[example]]
name = "server"
required-features = ["rustls"]

[[example]]
name = "client"
required-features = ["rustls"]

[[example]]
name = "insecure_connection"
required-features = ["rustls"]

[[example]]
name = "single_socket"
required-features = ["rustls"]

[[example]]
name = "connection"
required-features = ["rustls"]

[[bench]]
name = "bench"
harness = false
required-features = ["rustls"]
